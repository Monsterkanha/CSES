multiset<int> dist contains all possible distances. Adding a new light affect the distance between left bound and right bound
so delete their old distance and add two new distances.
Don't forget to add light.

#include <bits/stdc++.h>
using namespace std;


int32_t main () {
	// freopen("diamond.in", "r", stdin);
	// freopen("diamond.out", "w", stdout);
	ios_base::sync_with_stdio(0);
    cin.tie(0);
	
	int x, n;
	cin>>x>>n;
	

	set<int> lights;
	multiset<int> dist;
	lights.insert(0);  // To not write extra conditions.
	lights.insert(x);  // Safety check 
	dist.insert(x);
	for(int i = 0; i < n; i++){
		int pos;
		cin>>pos;

		auto itr1 = lights.upper_bound(pos) , itr2 = itr1 ; 
		itr1--;

		dist.erase(dist.find(*itr2-*itr1));
		
		dist.insert(pos-*itr1);
		dist.insert(*itr2- pos);

		lights.insert(pos);
		auto ans = dist.end();
		ans--;
		cout<<*ans<<" ";
	}
}
